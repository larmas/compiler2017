Grammar

    0 $accept: program $end

    1 program: list_var_decl list_method_decl
    2        | list_method_decl
    3        | list_var_decl
    4        | %empty

    5 list_var_decl: var_decl
    6              | list_var_decl var_decl

    7 list_method_decl: method_decl
    8                 | method_decl list_method_decl

    9 var_decl: type ID ';'
   10         | type ID ',' AuxId

   11 AuxId: ID ';'
   12      | ID ',' AuxId

   13 method_decl: type ID '(' ')' block
   14            | type ID '(' TypeID ')' block
   15            | VOID ID '(' ')' block
   16            | VOID ID '(' TypeID ')' block

   17 TypeID: type ID
   18       | type ID ',' TypeID

   19 block: '{' list_var_decl list_statament '}'
   20      | '{' list_statament '}'
   21      | '{' list_var_decl '}'
   22      | '{' '}'

   23 list_statament: statament
   24               | statament list_statament

   25 type: INT
   26     | BOOLEAN

   27 statament: ID ASIGN expr ';'
   28          | method_call ';'
   29          | IF '(' expr ')' block ELSE block
   30          | IF '(' expr ')' block
   31          | WHILE '(' expr ')' block
   32          | RETURN expr ';'
   33          | RETURN ';'
   34          | ';'
   35          | block

   36 method_call: ID '(' ')'
   37            | ID '(' AuxExpr ')'

   38 AuxExpr: expr
   39        | expr ',' AuxExpr

   40 expr: ID
   41     | method_call
   42     | literal
   43     | expr MAS expr
   44     | expr MULT expr
   45     | expr MENOS expr
   46     | expr DIV expr
   47     | expr MOD expr
   48     | expr MENOR expr
   49     | expr MAYOR expr
   50     | expr IGUAL expr
   51     | expr AND expr
   52     | expr OR expr
   53     | MENOS expr
   54     | NOT expr
   55     | '(' expr ')'

   56 literal: INT_LITERAL
   57        | bool_literal

   58 bool_literal: TRUE
   59             | FALSE


Terminals, with rules where they appear

$end (0) 0
'(' (40) 13 14 15 16 29 30 31 36 37 55
')' (41) 13 14 15 16 29 30 31 36 37 55
',' (44) 10 12 18 39
';' (59) 9 11 27 28 32 33 34
'{' (123) 19 20 21 22
'}' (125) 19 20 21 22
error (256)
ID (258) 9 10 11 12 13 14 15 16 17 18 27 36 37 40
INT_LITERAL (259) 56
BOOLEAN (260) 26
ELSE (261) 29
FALSE (262) 59
IF (263) 29 30
INT (264) 25
RETURN (265) 32 33
TRUE (266) 58
VOID (267) 15 16
WHILE (268) 31
MAS (269) 43
MENOS (270) 45 53
MULT (271) 44
DIV (272) 46
MOD (273) 47
MAYOR (274) 49
MENOR (275) 48
ASIGN (276) 27
IGUAL (277) 50
AND (278) 51
OR (279) 52
NOT (280) 54
UMINUS (281)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1 2 3 4, on right: 0
list_var_decl (35)
    on left: 5 6, on right: 1 3 6 19 21
list_method_decl (36)
    on left: 7 8, on right: 1 2 8
var_decl (37)
    on left: 9 10, on right: 5 6
AuxId (38)
    on left: 11 12, on right: 10 12
method_decl (39)
    on left: 13 14 15 16, on right: 7 8
TypeID (40)
    on left: 17 18, on right: 14 16 18
block (41)
    on left: 19 20 21 22, on right: 13 14 15 16 29 30 31 35
list_statament (42)
    on left: 23 24, on right: 19 20 24
type (43)
    on left: 25 26, on right: 9 10 13 14 17 18
statament (44)
    on left: 27 28 29 30 31 32 33 34 35, on right: 23 24
method_call (45)
    on left: 36 37, on right: 28 41
AuxExpr (46)
    on left: 38 39, on right: 37 39
expr (47)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55, on right:
    27 29 30 31 32 38 39 43 44 45 46 47 48 49 50 51 52 53 54 55
literal (48)
    on left: 56 57, on right: 42
bool_literal (49)
    on left: 58 59, on right: 57


State 0

    0 $accept: . program $end

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    VOID     shift, and go to state 3

    $default  reduce using rule 4 (program)

    program           go to state 4
    list_var_decl     go to state 5
    list_method_decl  go to state 6
    var_decl          go to state 7
    method_decl       go to state 8
    type              go to state 9


State 1

   26 type: BOOLEAN .

    $default  reduce using rule 26 (type)


State 2

   25 type: INT .

    $default  reduce using rule 25 (type)


State 3

   15 method_decl: VOID . ID '(' ')' block
   16            | VOID . ID '(' TypeID ')' block

    ID  shift, and go to state 10


State 4

    0 $accept: program . $end

    $end  shift, and go to state 11


State 5

    1 program: list_var_decl . list_method_decl
    3        | list_var_decl .
    6 list_var_decl: list_var_decl . var_decl

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    VOID     shift, and go to state 3

    $default  reduce using rule 3 (program)

    list_method_decl  go to state 12
    var_decl          go to state 13
    method_decl       go to state 8
    type              go to state 9


State 6

    2 program: list_method_decl .

    $default  reduce using rule 2 (program)


State 7

    5 list_var_decl: var_decl .

    $default  reduce using rule 5 (list_var_decl)


State 8

    7 list_method_decl: method_decl .
    8                 | method_decl . list_method_decl

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    VOID     shift, and go to state 3

    $default  reduce using rule 7 (list_method_decl)

    list_method_decl  go to state 14
    method_decl       go to state 8
    type              go to state 15


State 9

    9 var_decl: type . ID ';'
   10         | type . ID ',' AuxId
   13 method_decl: type . ID '(' ')' block
   14            | type . ID '(' TypeID ')' block

    ID  shift, and go to state 16


State 10

   15 method_decl: VOID ID . '(' ')' block
   16            | VOID ID . '(' TypeID ')' block

    '('  shift, and go to state 17


State 11

    0 $accept: program $end .

    $default  accept


State 12

    1 program: list_var_decl list_method_decl .

    $default  reduce using rule 1 (program)


State 13

    6 list_var_decl: list_var_decl var_decl .

    $default  reduce using rule 6 (list_var_decl)


State 14

    8 list_method_decl: method_decl list_method_decl .

    $default  reduce using rule 8 (list_method_decl)


State 15

   13 method_decl: type . ID '(' ')' block
   14            | type . ID '(' TypeID ')' block

    ID  shift, and go to state 18


State 16

    9 var_decl: type ID . ';'
   10         | type ID . ',' AuxId
   13 method_decl: type ID . '(' ')' block
   14            | type ID . '(' TypeID ')' block

    ';'  shift, and go to state 19
    ','  shift, and go to state 20
    '('  shift, and go to state 21


State 17

   15 method_decl: VOID ID '(' . ')' block
   16            | VOID ID '(' . TypeID ')' block

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    ')'      shift, and go to state 22

    TypeID  go to state 23
    type    go to state 24


State 18

   13 method_decl: type ID . '(' ')' block
   14            | type ID . '(' TypeID ')' block

    '('  shift, and go to state 21


State 19

    9 var_decl: type ID ';' .

    $default  reduce using rule 9 (var_decl)


State 20

   10 var_decl: type ID ',' . AuxId

    ID  shift, and go to state 25

    AuxId  go to state 26


State 21

   13 method_decl: type ID '(' . ')' block
   14            | type ID '(' . TypeID ')' block

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2
    ')'      shift, and go to state 27

    TypeID  go to state 28
    type    go to state 24


State 22

   15 method_decl: VOID ID '(' ')' . block

    '{'  shift, and go to state 29

    block  go to state 30


State 23

   16 method_decl: VOID ID '(' TypeID . ')' block

    ')'  shift, and go to state 31


State 24

   17 TypeID: type . ID
   18       | type . ID ',' TypeID

    ID  shift, and go to state 32


State 25

   11 AuxId: ID . ';'
   12      | ID . ',' AuxId

    ';'  shift, and go to state 33
    ','  shift, and go to state 34


State 26

   10 var_decl: type ID ',' AuxId .

    $default  reduce using rule 10 (var_decl)


State 27

   13 method_decl: type ID '(' ')' . block

    '{'  shift, and go to state 29

    block  go to state 35


State 28

   14 method_decl: type ID '(' TypeID . ')' block

    ')'  shift, and go to state 36


State 29

   19 block: '{' . list_var_decl list_statament '}'
   20      | '{' . list_statament '}'
   21      | '{' . list_var_decl '}'
   22      | '{' . '}'

    ID       shift, and go to state 37
    BOOLEAN  shift, and go to state 1
    IF       shift, and go to state 38
    INT      shift, and go to state 2
    RETURN   shift, and go to state 39
    WHILE    shift, and go to state 40
    ';'      shift, and go to state 41
    '{'      shift, and go to state 29
    '}'      shift, and go to state 42

    list_var_decl   go to state 43
    var_decl        go to state 7
    block           go to state 44
    list_statament  go to state 45
    type            go to state 46
    statament       go to state 47
    method_call     go to state 48


State 30

   15 method_decl: VOID ID '(' ')' block .

    $default  reduce using rule 15 (method_decl)


State 31

   16 method_decl: VOID ID '(' TypeID ')' . block

    '{'  shift, and go to state 29

    block  go to state 49


State 32

   17 TypeID: type ID .
   18       | type ID . ',' TypeID

    ','  shift, and go to state 50

    $default  reduce using rule 17 (TypeID)


State 33

   11 AuxId: ID ';' .

    $default  reduce using rule 11 (AuxId)


State 34

   12 AuxId: ID ',' . AuxId

    ID  shift, and go to state 25

    AuxId  go to state 51


State 35

   13 method_decl: type ID '(' ')' block .

    $default  reduce using rule 13 (method_decl)


State 36

   14 method_decl: type ID '(' TypeID ')' . block

    '{'  shift, and go to state 29

    block  go to state 52


State 37

   27 statament: ID . ASIGN expr ';'
   36 method_call: ID . '(' ')'
   37            | ID . '(' AuxExpr ')'

    ASIGN  shift, and go to state 53
    '('    shift, and go to state 54


State 38

   29 statament: IF . '(' expr ')' block ELSE block
   30          | IF . '(' expr ')' block

    '('  shift, and go to state 55


State 39

   32 statament: RETURN . expr ';'
   33          | RETURN . ';'

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    ';'          shift, and go to state 62
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 65
    literal       go to state 66
    bool_literal  go to state 67


State 40

   31 statament: WHILE . '(' expr ')' block

    '('  shift, and go to state 68


State 41

   34 statament: ';' .

    $default  reduce using rule 34 (statament)


State 42

   22 block: '{' '}' .

    $default  reduce using rule 22 (block)


State 43

    6 list_var_decl: list_var_decl . var_decl
   19 block: '{' list_var_decl . list_statament '}'
   21      | '{' list_var_decl . '}'

    ID       shift, and go to state 37
    BOOLEAN  shift, and go to state 1
    IF       shift, and go to state 38
    INT      shift, and go to state 2
    RETURN   shift, and go to state 39
    WHILE    shift, and go to state 40
    ';'      shift, and go to state 41
    '{'      shift, and go to state 29
    '}'      shift, and go to state 69

    var_decl        go to state 13
    block           go to state 44
    list_statament  go to state 70
    type            go to state 46
    statament       go to state 47
    method_call     go to state 48


State 44

   35 statament: block .

    $default  reduce using rule 35 (statament)


State 45

   20 block: '{' list_statament . '}'

    '}'  shift, and go to state 71


State 46

    9 var_decl: type . ID ';'
   10         | type . ID ',' AuxId

    ID  shift, and go to state 72


State 47

   23 list_statament: statament .
   24               | statament . list_statament

    ID      shift, and go to state 37
    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ';'     shift, and go to state 41
    '{'     shift, and go to state 29

    $default  reduce using rule 23 (list_statament)

    block           go to state 44
    list_statament  go to state 73
    statament       go to state 47
    method_call     go to state 48


State 48

   28 statament: method_call . ';'

    ';'  shift, and go to state 74


State 49

   16 method_decl: VOID ID '(' TypeID ')' block .

    $default  reduce using rule 16 (method_decl)


State 50

   18 TypeID: type ID ',' . TypeID

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2

    TypeID  go to state 75
    type    go to state 24


State 51

   12 AuxId: ID ',' AuxId .

    $default  reduce using rule 12 (AuxId)


State 52

   14 method_decl: type ID '(' TypeID ')' block .

    $default  reduce using rule 14 (method_decl)


State 53

   27 statament: ID ASIGN . expr ';'

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 76
    literal       go to state 66
    bool_literal  go to state 67


State 54

   36 method_call: ID '(' . ')'
   37            | ID '(' . AuxExpr ')'

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63
    ')'          shift, and go to state 77

    method_call   go to state 64
    AuxExpr       go to state 78
    expr          go to state 79
    literal       go to state 66
    bool_literal  go to state 67


State 55

   29 statament: IF '(' . expr ')' block ELSE block
   30          | IF '(' . expr ')' block

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 80
    literal       go to state 66
    bool_literal  go to state 67


State 56

   36 method_call: ID . '(' ')'
   37            | ID . '(' AuxExpr ')'
   40 expr: ID .

    '('  shift, and go to state 54

    $default  reduce using rule 40 (expr)


State 57

   56 literal: INT_LITERAL .

    $default  reduce using rule 56 (literal)


State 58

   59 bool_literal: FALSE .

    $default  reduce using rule 59 (bool_literal)


State 59

   58 bool_literal: TRUE .

    $default  reduce using rule 58 (bool_literal)


State 60

   53 expr: MENOS . expr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 81
    literal       go to state 66
    bool_literal  go to state 67


State 61

   54 expr: NOT . expr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 82
    literal       go to state 66
    bool_literal  go to state 67


State 62

   33 statament: RETURN ';' .

    $default  reduce using rule 33 (statament)


State 63

   55 expr: '(' . expr ')'

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 83
    literal       go to state 66
    bool_literal  go to state 67


State 64

   41 expr: method_call .

    $default  reduce using rule 41 (expr)


State 65

   32 statament: RETURN expr . ';'
   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr

    MAS    shift, and go to state 84
    MENOS  shift, and go to state 85
    MULT   shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88
    MAYOR  shift, and go to state 89
    MENOR  shift, and go to state 90
    IGUAL  shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93
    ';'    shift, and go to state 94


State 66

   42 expr: literal .

    $default  reduce using rule 42 (expr)


State 67

   57 literal: bool_literal .

    $default  reduce using rule 57 (literal)


State 68

   31 statament: WHILE '(' . expr ')' block

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 95
    literal       go to state 66
    bool_literal  go to state 67


State 69

   21 block: '{' list_var_decl '}' .

    $default  reduce using rule 21 (block)


State 70

   19 block: '{' list_var_decl list_statament . '}'

    '}'  shift, and go to state 96


State 71

   20 block: '{' list_statament '}' .

    $default  reduce using rule 20 (block)


State 72

    9 var_decl: type ID . ';'
   10         | type ID . ',' AuxId

    ';'  shift, and go to state 19
    ','  shift, and go to state 20


State 73

   24 list_statament: statament list_statament .

    $default  reduce using rule 24 (list_statament)


State 74

   28 statament: method_call ';' .

    $default  reduce using rule 28 (statament)


State 75

   18 TypeID: type ID ',' TypeID .

    $default  reduce using rule 18 (TypeID)


State 76

   27 statament: ID ASIGN expr . ';'
   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr

    MAS    shift, and go to state 84
    MENOS  shift, and go to state 85
    MULT   shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88
    MAYOR  shift, and go to state 89
    MENOR  shift, and go to state 90
    IGUAL  shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93
    ';'    shift, and go to state 97


State 77

   36 method_call: ID '(' ')' .

    $default  reduce using rule 36 (method_call)


State 78

   37 method_call: ID '(' AuxExpr . ')'

    ')'  shift, and go to state 98


State 79

   38 AuxExpr: expr .
   39        | expr . ',' AuxExpr
   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr

    MAS    shift, and go to state 84
    MENOS  shift, and go to state 85
    MULT   shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88
    MAYOR  shift, and go to state 89
    MENOR  shift, and go to state 90
    IGUAL  shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93
    ','    shift, and go to state 99

    $default  reduce using rule 38 (AuxExpr)


State 80

   29 statament: IF '(' expr . ')' block ELSE block
   30          | IF '(' expr . ')' block
   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr

    MAS    shift, and go to state 84
    MENOS  shift, and go to state 85
    MULT   shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88
    MAYOR  shift, and go to state 89
    MENOR  shift, and go to state 90
    IGUAL  shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93
    ')'    shift, and go to state 100


State 81

   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr
   53     | MENOS expr .

    $default  reduce using rule 53 (expr)


State 82

   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr
   54     | NOT expr .

    $default  reduce using rule 54 (expr)


State 83

   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr
   55     | '(' expr . ')'

    MAS    shift, and go to state 84
    MENOS  shift, and go to state 85
    MULT   shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88
    MAYOR  shift, and go to state 89
    MENOR  shift, and go to state 90
    IGUAL  shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93
    ')'    shift, and go to state 101


State 84

   43 expr: expr MAS . expr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 102
    literal       go to state 66
    bool_literal  go to state 67


State 85

   45 expr: expr MENOS . expr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 103
    literal       go to state 66
    bool_literal  go to state 67


State 86

   44 expr: expr MULT . expr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 104
    literal       go to state 66
    bool_literal  go to state 67


State 87

   46 expr: expr DIV . expr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 105
    literal       go to state 66
    bool_literal  go to state 67


State 88

   47 expr: expr MOD . expr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 106
    literal       go to state 66
    bool_literal  go to state 67


State 89

   49 expr: expr MAYOR . expr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 107
    literal       go to state 66
    bool_literal  go to state 67


State 90

   48 expr: expr MENOR . expr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 108
    literal       go to state 66
    bool_literal  go to state 67


State 91

   50 expr: expr IGUAL . expr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 109
    literal       go to state 66
    bool_literal  go to state 67


State 92

   51 expr: expr AND . expr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 110
    literal       go to state 66
    bool_literal  go to state 67


State 93

   52 expr: expr OR . expr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    expr          go to state 111
    literal       go to state 66
    bool_literal  go to state 67


State 94

   32 statament: RETURN expr ';' .

    $default  reduce using rule 32 (statament)


State 95

   31 statament: WHILE '(' expr . ')' block
   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr

    MAS    shift, and go to state 84
    MENOS  shift, and go to state 85
    MULT   shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88
    MAYOR  shift, and go to state 89
    MENOR  shift, and go to state 90
    IGUAL  shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93
    ')'    shift, and go to state 112


State 96

   19 block: '{' list_var_decl list_statament '}' .

    $default  reduce using rule 19 (block)


State 97

   27 statament: ID ASIGN expr ';' .

    $default  reduce using rule 27 (statament)


State 98

   37 method_call: ID '(' AuxExpr ')' .

    $default  reduce using rule 37 (method_call)


State 99

   39 AuxExpr: expr ',' . AuxExpr

    ID           shift, and go to state 56
    INT_LITERAL  shift, and go to state 57
    FALSE        shift, and go to state 58
    TRUE         shift, and go to state 59
    MENOS        shift, and go to state 60
    NOT          shift, and go to state 61
    '('          shift, and go to state 63

    method_call   go to state 64
    AuxExpr       go to state 113
    expr          go to state 79
    literal       go to state 66
    bool_literal  go to state 67


State 100

   29 statament: IF '(' expr ')' . block ELSE block
   30          | IF '(' expr ')' . block

    '{'  shift, and go to state 29

    block  go to state 114


State 101

   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)


State 102

   43 expr: expr . MAS expr
   43     | expr MAS expr .
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 88

    $default  reduce using rule 43 (expr)


State 103

   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   45     | expr MENOS expr .
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 88

    $default  reduce using rule 45 (expr)


State 104

   43 expr: expr . MAS expr
   44     | expr . MULT expr
   44     | expr MULT expr .
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr

    $default  reduce using rule 44 (expr)


State 105

   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   46     | expr DIV expr .
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr

    $default  reduce using rule 46 (expr)


State 106

   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   47     | expr MOD expr .
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr

    $default  reduce using rule 47 (expr)


State 107

   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   49     | expr MAYOR expr .
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr

    MAS    shift, and go to state 84
    MENOS  shift, and go to state 85
    MULT   shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88

    MAYOR  error (nonassociative)
    MENOR  error (nonassociative)

    $default  reduce using rule 49 (expr)


State 108

   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   48     | expr MENOR expr .
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr

    MAS    shift, and go to state 84
    MENOS  shift, and go to state 85
    MULT   shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88

    MAYOR  error (nonassociative)
    MENOR  error (nonassociative)

    $default  reduce using rule 48 (expr)


State 109

   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   50     | expr IGUAL expr .
   51     | expr . AND expr
   52     | expr . OR expr

    MAS    shift, and go to state 84
    MENOS  shift, and go to state 85
    MULT   shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88
    MAYOR  shift, and go to state 89
    MENOR  shift, and go to state 90

    IGUAL  error (nonassociative)

    $default  reduce using rule 50 (expr)


State 110

   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   51     | expr AND expr .
   52     | expr . OR expr

    MAS    shift, and go to state 84
    MENOS  shift, and go to state 85
    MULT   shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88
    MAYOR  shift, and go to state 89
    MENOR  shift, and go to state 90
    IGUAL  shift, and go to state 91

    $default  reduce using rule 51 (expr)


State 111

   43 expr: expr . MAS expr
   44     | expr . MULT expr
   45     | expr . MENOS expr
   46     | expr . DIV expr
   47     | expr . MOD expr
   48     | expr . MENOR expr
   49     | expr . MAYOR expr
   50     | expr . IGUAL expr
   51     | expr . AND expr
   52     | expr . OR expr
   52     | expr OR expr .

    MAS    shift, and go to state 84
    MENOS  shift, and go to state 85
    MULT   shift, and go to state 86
    DIV    shift, and go to state 87
    MOD    shift, and go to state 88
    MAYOR  shift, and go to state 89
    MENOR  shift, and go to state 90
    IGUAL  shift, and go to state 91
    AND    shift, and go to state 92

    $default  reduce using rule 52 (expr)


State 112

   31 statament: WHILE '(' expr ')' . block

    '{'  shift, and go to state 29

    block  go to state 115


State 113

   39 AuxExpr: expr ',' AuxExpr .

    $default  reduce using rule 39 (AuxExpr)


State 114

   29 statament: IF '(' expr ')' block . ELSE block
   30          | IF '(' expr ')' block .

    ELSE  shift, and go to state 116

    $default  reduce using rule 30 (statament)


State 115

   31 statament: WHILE '(' expr ')' block .

    $default  reduce using rule 31 (statament)


State 116

   29 statament: IF '(' expr ')' block ELSE . block

    '{'  shift, and go to state 29

    block  go to state 117


State 117

   29 statament: IF '(' expr ')' block ELSE block .

    $default  reduce using rule 29 (statament)
