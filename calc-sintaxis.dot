// Generated by GNU Bison 3.0.4.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "calc-sintaxis.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . program $end\l"]
  0 -> 1 [style=solid label="BOOLEAN"]
  0 -> 2 [style=solid label="INT"]
  0 -> 3 [style=solid label="VOID"]
  0 -> 4 [style=dashed label="program"]
  0 -> 5 [style=dashed label="var_decl"]
  0 -> 6 [style=dashed label="method_decl"]
  0 -> 7 [style=dashed label="type"]
  0 -> "0R4" [style=solid]
 "0R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  1 [label="State 1\n\l 20 type: BOOLEAN .\l"]
  1 -> "1R20" [style=solid]
 "1R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  2 [label="State 2\n\l 19 type: INT .\l"]
  2 -> "2R19" [style=solid]
 "2R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  3 [label="State 3\n\l 11 method_decl: VOID . ID '(' ')' block\l 12            | VOID . ID '(' TypeID ')' block\l"]
  3 -> 8 [style=solid label="ID"]
  4 [label="State 4\n\l  0 $accept: program . $end\l"]
  4 -> 9 [style=solid label="$end"]
  5 [label="State 5\n\l  1 program: var_decl . method_decl\l  3        | var_decl .\l"]
  5 -> 1 [style=solid label="BOOLEAN"]
  5 -> 2 [style=solid label="INT"]
  5 -> 3 [style=solid label="VOID"]
  5 -> 10 [style=dashed label="method_decl"]
  5 -> 11 [style=dashed label="type"]
  5 -> "5R3" [style=solid]
 "5R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l  2 program: method_decl .\l"]
  6 -> "6R2" [style=solid]
 "6R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  5 var_decl: type . ID ';'\l  6         | type . ID ',' AuxId\l  9 method_decl: type . ID '(' ')' block\l 10            | type . ID '(' TypeID ')' block\l"]
  7 -> 12 [style=solid label="ID"]
  8 [label="State 8\n\l 11 method_decl: VOID ID . '(' ')' block\l 12            | VOID ID . '(' TypeID ')' block\l"]
  8 -> 13 [style=solid label="'('"]
  9 [label="State 9\n\l  0 $accept: program $end .\l"]
  9 -> "9R0" [style=solid]
 "9R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  10 [label="State 10\n\l  1 program: var_decl method_decl .\l"]
  10 -> "10R1" [style=solid]
 "10R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l  9 method_decl: type . ID '(' ')' block\l 10            | type . ID '(' TypeID ')' block\l"]
  11 -> 14 [style=solid label="ID"]
  12 [label="State 12\n\l  5 var_decl: type ID . ';'\l  6         | type ID . ',' AuxId\l  9 method_decl: type ID . '(' ')' block\l 10            | type ID . '(' TypeID ')' block\l"]
  12 -> 15 [style=solid label="';'"]
  12 -> 16 [style=solid label="','"]
  12 -> 17 [style=solid label="'('"]
  13 [label="State 13\n\l 11 method_decl: VOID ID '(' . ')' block\l 12            | VOID ID '(' . TypeID ')' block\l"]
  13 -> 1 [style=solid label="BOOLEAN"]
  13 -> 2 [style=solid label="INT"]
  13 -> 18 [style=solid label="')'"]
  13 -> 19 [style=dashed label="TypeID"]
  13 -> 20 [style=dashed label="type"]
  14 [label="State 14\n\l  9 method_decl: type ID . '(' ')' block\l 10            | type ID . '(' TypeID ')' block\l"]
  14 -> 17 [style=solid label="'('"]
  15 [label="State 15\n\l  5 var_decl: type ID ';' .\l"]
  15 -> "15R5" [style=solid]
 "15R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l  6 var_decl: type ID ',' . AuxId\l"]
  16 -> 21 [style=solid label="ID"]
  16 -> 22 [style=dashed label="AuxId"]
  17 [label="State 17\n\l  9 method_decl: type ID '(' . ')' block\l 10            | type ID '(' . TypeID ')' block\l"]
  17 -> 1 [style=solid label="BOOLEAN"]
  17 -> 2 [style=solid label="INT"]
  17 -> 23 [style=solid label="')'"]
  17 -> 24 [style=dashed label="TypeID"]
  17 -> 20 [style=dashed label="type"]
  18 [label="State 18\n\l 11 method_decl: VOID ID '(' ')' . block\l"]
  18 -> 25 [style=solid label="'{'"]
  18 -> 26 [style=dashed label="block"]
  19 [label="State 19\n\l 12 method_decl: VOID ID '(' TypeID . ')' block\l"]
  19 -> 27 [style=solid label="')'"]
  20 [label="State 20\n\l 13 TypeID: type . ID\l 14       | type . ID ',' TypeID\l"]
  20 -> 28 [style=solid label="ID"]
  21 [label="State 21\n\l  7 AuxId: ID . ';'\l  8      | ID . ',' AuxId\l"]
  21 -> 29 [style=solid label="';'"]
  21 -> 30 [style=solid label="','"]
  22 [label="State 22\n\l  6 var_decl: type ID ',' AuxId .\l"]
  22 -> "22R6" [style=solid]
 "22R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  23 [label="State 23\n\l  9 method_decl: type ID '(' ')' . block\l"]
  23 -> 25 [style=solid label="'{'"]
  23 -> 31 [style=dashed label="block"]
  24 [label="State 24\n\l 10 method_decl: type ID '(' TypeID . ')' block\l"]
  24 -> 32 [style=solid label="')'"]
  25 [label="State 25\n\l 15 block: '{' . var_decl statament '}'\l 16      | '{' . statament '}'\l 17      | '{' . var_decl '}'\l 18      | '{' . '}'\l"]
  25 -> 33 [style=solid label="ID"]
  25 -> 1 [style=solid label="BOOLEAN"]
  25 -> 34 [style=solid label="IF"]
  25 -> 2 [style=solid label="INT"]
  25 -> 35 [style=solid label="RETURN"]
  25 -> 36 [style=solid label="WHILE"]
  25 -> 37 [style=solid label="';'"]
  25 -> 25 [style=solid label="'{'"]
  25 -> 38 [style=solid label="'}'"]
  25 -> 39 [style=dashed label="var_decl"]
  25 -> 40 [style=dashed label="block"]
  25 -> 41 [style=dashed label="type"]
  25 -> 42 [style=dashed label="statament"]
  25 -> 43 [style=dashed label="method_call"]
  26 [label="State 26\n\l 11 method_decl: VOID ID '(' ')' block .\l"]
  26 -> "26R11" [style=solid]
 "26R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 12 method_decl: VOID ID '(' TypeID ')' . block\l"]
  27 -> 25 [style=solid label="'{'"]
  27 -> 44 [style=dashed label="block"]
  28 [label="State 28\n\l 13 TypeID: type ID .\l 14       | type ID . ',' TypeID\l"]
  28 -> 45 [style=solid label="','"]
  28 -> "28R13" [style=solid]
 "28R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  29 [label="State 29\n\l  7 AuxId: ID ';' .\l"]
  29 -> "29R7" [style=solid]
 "29R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l  8 AuxId: ID ',' . AuxId\l"]
  30 -> 21 [style=solid label="ID"]
  30 -> 46 [style=dashed label="AuxId"]
  31 [label="State 31\n\l  9 method_decl: type ID '(' ')' block .\l"]
  31 -> "31R9" [style=solid]
 "31R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l 10 method_decl: type ID '(' TypeID ')' . block\l"]
  32 -> 25 [style=solid label="'{'"]
  32 -> 47 [style=dashed label="block"]
  33 [label="State 33\n\l 21 statament: ID . ASIGN expr ';'\l 30 method_call: ID . '(' ')'\l 31            | ID . '(' expr ')'\l 32            | ID . '(' expr AuxExpr ')'\l"]
  33 -> 48 [style=solid label="ASIGN"]
  33 -> 49 [style=solid label="'('"]
  34 [label="State 34\n\l 23 statament: IF . '(' expr ')' block ELSE block\l 24          | IF . '(' expr ')' block\l"]
  34 -> 50 [style=solid label="'('"]
  35 [label="State 35\n\l 26 statament: RETURN . expr ';'\l 27          | RETURN .\l"]
  35 -> 51 [style=solid label="ID"]
  35 -> 52 [style=solid label="INT_LITERAL"]
  35 -> 53 [style=solid label="FALSE"]
  35 -> 54 [style=solid label="TRUE"]
  35 -> 55 [style=solid label="MENOS"]
  35 -> 56 [style=solid label="'('"]
  35 -> 57 [style=solid label="'!'"]
  35 -> 58 [style=dashed label="method_call"]
  35 -> 59 [style=dashed label="expr"]
  35 -> 60 [style=dashed label="literal"]
  35 -> 61 [style=dashed label="bool_literal"]
  35 -> "35R27" [style=solid]
 "35R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 25 statament: WHILE . expr block\l"]
  36 -> 51 [style=solid label="ID"]
  36 -> 52 [style=solid label="INT_LITERAL"]
  36 -> 53 [style=solid label="FALSE"]
  36 -> 54 [style=solid label="TRUE"]
  36 -> 55 [style=solid label="MENOS"]
  36 -> 56 [style=solid label="'('"]
  36 -> 57 [style=solid label="'!'"]
  36 -> 58 [style=dashed label="method_call"]
  36 -> 62 [style=dashed label="expr"]
  36 -> 60 [style=dashed label="literal"]
  36 -> 61 [style=dashed label="bool_literal"]
  37 [label="State 37\n\l 28 statament: ';' .\l"]
  37 -> "37R28" [style=solid]
 "37R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 18 block: '{' '}' .\l"]
  38 -> "38R18" [style=solid]
 "38R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 15 block: '{' var_decl . statament '}'\l 17      | '{' var_decl . '}'\l"]
  39 -> 33 [style=solid label="ID"]
  39 -> 34 [style=solid label="IF"]
  39 -> 35 [style=solid label="RETURN"]
  39 -> 36 [style=solid label="WHILE"]
  39 -> 37 [style=solid label="';'"]
  39 -> 25 [style=solid label="'{'"]
  39 -> 63 [style=solid label="'}'"]
  39 -> 40 [style=dashed label="block"]
  39 -> 64 [style=dashed label="statament"]
  39 -> 43 [style=dashed label="method_call"]
  40 [label="State 40\n\l 29 statament: block .\l"]
  40 -> "40R29" [style=solid]
 "40R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l  5 var_decl: type . ID ';'\l  6         | type . ID ',' AuxId\l"]
  41 -> 65 [style=solid label="ID"]
  42 [label="State 42\n\l 16 block: '{' statament . '}'\l"]
  42 -> 66 [style=solid label="'}'"]
  43 [label="State 43\n\l 22 statament: method_call . ';'\l"]
  43 -> 67 [style=solid label="';'"]
  44 [label="State 44\n\l 12 method_decl: VOID ID '(' TypeID ')' block .\l"]
  44 -> "44R12" [style=solid]
 "44R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 14 TypeID: type ID ',' . TypeID\l"]
  45 -> 1 [style=solid label="BOOLEAN"]
  45 -> 2 [style=solid label="INT"]
  45 -> 68 [style=dashed label="TypeID"]
  45 -> 20 [style=dashed label="type"]
  46 [label="State 46\n\l  8 AuxId: ID ',' AuxId .\l"]
  46 -> "46R8" [style=solid]
 "46R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 10 method_decl: type ID '(' TypeID ')' block .\l"]
  47 -> "47R10" [style=solid]
 "47R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 21 statament: ID ASIGN . expr ';'\l"]
  48 -> 51 [style=solid label="ID"]
  48 -> 52 [style=solid label="INT_LITERAL"]
  48 -> 53 [style=solid label="FALSE"]
  48 -> 54 [style=solid label="TRUE"]
  48 -> 55 [style=solid label="MENOS"]
  48 -> 56 [style=solid label="'('"]
  48 -> 57 [style=solid label="'!'"]
  48 -> 58 [style=dashed label="method_call"]
  48 -> 69 [style=dashed label="expr"]
  48 -> 60 [style=dashed label="literal"]
  48 -> 61 [style=dashed label="bool_literal"]
  49 [label="State 49\n\l 30 method_call: ID '(' . ')'\l 31            | ID '(' . expr ')'\l 32            | ID '(' . expr AuxExpr ')'\l"]
  49 -> 51 [style=solid label="ID"]
  49 -> 52 [style=solid label="INT_LITERAL"]
  49 -> 53 [style=solid label="FALSE"]
  49 -> 54 [style=solid label="TRUE"]
  49 -> 55 [style=solid label="MENOS"]
  49 -> 56 [style=solid label="'('"]
  49 -> 70 [style=solid label="')'"]
  49 -> 57 [style=solid label="'!'"]
  49 -> 58 [style=dashed label="method_call"]
  49 -> 71 [style=dashed label="expr"]
  49 -> 60 [style=dashed label="literal"]
  49 -> 61 [style=dashed label="bool_literal"]
  50 [label="State 50\n\l 23 statament: IF '(' . expr ')' block ELSE block\l 24          | IF '(' . expr ')' block\l"]
  50 -> 51 [style=solid label="ID"]
  50 -> 52 [style=solid label="INT_LITERAL"]
  50 -> 53 [style=solid label="FALSE"]
  50 -> 54 [style=solid label="TRUE"]
  50 -> 55 [style=solid label="MENOS"]
  50 -> 56 [style=solid label="'('"]
  50 -> 57 [style=solid label="'!'"]
  50 -> 58 [style=dashed label="method_call"]
  50 -> 72 [style=dashed label="expr"]
  50 -> 60 [style=dashed label="literal"]
  50 -> 61 [style=dashed label="bool_literal"]
  51 [label="State 51\n\l 30 method_call: ID . '(' ')'\l 31            | ID . '(' expr ')'\l 32            | ID . '(' expr AuxExpr ')'\l 35 expr: ID .\l"]
  51 -> 49 [style=solid label="'('"]
  51 -> "51R35" [style=solid]
 "51R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 55 literal: INT_LITERAL .\l"]
  52 -> "52R55" [style=solid]
 "52R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 58 bool_literal: FALSE .\l"]
  53 -> "53R58" [style=solid]
 "53R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l 57 bool_literal: TRUE .\l"]
  54 -> "54R57" [style=solid]
 "54R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l 39 expr: MENOS . expr\l"]
  55 -> 51 [style=solid label="ID"]
  55 -> 52 [style=solid label="INT_LITERAL"]
  55 -> 53 [style=solid label="FALSE"]
  55 -> 54 [style=solid label="TRUE"]
  55 -> 55 [style=solid label="MENOS"]
  55 -> 56 [style=solid label="'('"]
  55 -> 57 [style=solid label="'!'"]
  55 -> 58 [style=dashed label="method_call"]
  55 -> 73 [style=dashed label="expr"]
  55 -> 60 [style=dashed label="literal"]
  55 -> 61 [style=dashed label="bool_literal"]
  56 [label="State 56\n\l 41 expr: '(' . expr ')'\l"]
  56 -> 51 [style=solid label="ID"]
  56 -> 52 [style=solid label="INT_LITERAL"]
  56 -> 53 [style=solid label="FALSE"]
  56 -> 54 [style=solid label="TRUE"]
  56 -> 55 [style=solid label="MENOS"]
  56 -> 56 [style=solid label="'('"]
  56 -> 57 [style=solid label="'!'"]
  56 -> 58 [style=dashed label="method_call"]
  56 -> 74 [style=dashed label="expr"]
  56 -> 60 [style=dashed label="literal"]
  56 -> 61 [style=dashed label="bool_literal"]
  57 [label="State 57\n\l 40 expr: '!' . expr\l"]
  57 -> 51 [style=solid label="ID"]
  57 -> 52 [style=solid label="INT_LITERAL"]
  57 -> 53 [style=solid label="FALSE"]
  57 -> 54 [style=solid label="TRUE"]
  57 -> 55 [style=solid label="MENOS"]
  57 -> 56 [style=solid label="'('"]
  57 -> 57 [style=solid label="'!'"]
  57 -> 58 [style=dashed label="method_call"]
  57 -> 75 [style=dashed label="expr"]
  57 -> 60 [style=dashed label="literal"]
  57 -> 61 [style=dashed label="bool_literal"]
  58 [label="State 58\n\l 36 expr: method_call .\l"]
  58 -> "58R36" [style=solid]
 "58R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l 26 statament: RETURN expr . ';'\l 38 expr: expr . bin_op expr\l"]
  59 -> 76 [style=solid label="MAS"]
  59 -> 77 [style=solid label="MENOS"]
  59 -> 78 [style=solid label="MULT"]
  59 -> 79 [style=solid label="DIV"]
  59 -> 80 [style=solid label="MOD"]
  59 -> 81 [style=solid label="MAYOR"]
  59 -> 82 [style=solid label="MENOR"]
  59 -> 83 [style=solid label="IGUAL"]
  59 -> 84 [style=solid label="AND"]
  59 -> 85 [style=solid label="OR"]
  59 -> 86 [style=solid label="';'"]
  59 -> 87 [style=dashed label="bin_op"]
  59 -> 88 [style=dashed label="arith_op"]
  59 -> 89 [style=dashed label="rel_op"]
  59 -> 90 [style=dashed label="cond_op"]
  60 [label="State 60\n\l 37 expr: literal .\l"]
  60 -> "60R37" [style=solid]
 "60R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 56 literal: bool_literal .\l"]
  61 -> "61R56" [style=solid]
 "61R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l 25 statament: WHILE expr . block\l 38 expr: expr . bin_op expr\l"]
  62 -> 76 [style=solid label="MAS"]
  62 -> 77 [style=solid label="MENOS"]
  62 -> 78 [style=solid label="MULT"]
  62 -> 79 [style=solid label="DIV"]
  62 -> 80 [style=solid label="MOD"]
  62 -> 81 [style=solid label="MAYOR"]
  62 -> 82 [style=solid label="MENOR"]
  62 -> 83 [style=solid label="IGUAL"]
  62 -> 84 [style=solid label="AND"]
  62 -> 85 [style=solid label="OR"]
  62 -> 25 [style=solid label="'{'"]
  62 -> 91 [style=dashed label="block"]
  62 -> 87 [style=dashed label="bin_op"]
  62 -> 88 [style=dashed label="arith_op"]
  62 -> 89 [style=dashed label="rel_op"]
  62 -> 90 [style=dashed label="cond_op"]
  63 [label="State 63\n\l 17 block: '{' var_decl '}' .\l"]
  63 -> "63R17" [style=solid]
 "63R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 15 block: '{' var_decl statament . '}'\l"]
  64 -> 92 [style=solid label="'}'"]
  65 [label="State 65\n\l  5 var_decl: type ID . ';'\l  6         | type ID . ',' AuxId\l"]
  65 -> 15 [style=solid label="';'"]
  65 -> 16 [style=solid label="','"]
  66 [label="State 66\n\l 16 block: '{' statament '}' .\l"]
  66 -> "66R16" [style=solid]
 "66R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l 22 statament: method_call ';' .\l"]
  67 -> "67R22" [style=solid]
 "67R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l 14 TypeID: type ID ',' TypeID .\l"]
  68 -> "68R14" [style=solid]
 "68R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l 21 statament: ID ASIGN expr . ';'\l 38 expr: expr . bin_op expr\l"]
  69 -> 76 [style=solid label="MAS"]
  69 -> 77 [style=solid label="MENOS"]
  69 -> 78 [style=solid label="MULT"]
  69 -> 79 [style=solid label="DIV"]
  69 -> 80 [style=solid label="MOD"]
  69 -> 81 [style=solid label="MAYOR"]
  69 -> 82 [style=solid label="MENOR"]
  69 -> 83 [style=solid label="IGUAL"]
  69 -> 84 [style=solid label="AND"]
  69 -> 85 [style=solid label="OR"]
  69 -> 93 [style=solid label="';'"]
  69 -> 87 [style=dashed label="bin_op"]
  69 -> 88 [style=dashed label="arith_op"]
  69 -> 89 [style=dashed label="rel_op"]
  69 -> 90 [style=dashed label="cond_op"]
  70 [label="State 70\n\l 30 method_call: ID '(' ')' .\l"]
  70 -> "70R30" [style=solid]
 "70R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l 31 method_call: ID '(' expr . ')'\l 32            | ID '(' expr . AuxExpr ')'\l 38 expr: expr . bin_op expr\l"]
  71 -> 76 [style=solid label="MAS"]
  71 -> 77 [style=solid label="MENOS"]
  71 -> 78 [style=solid label="MULT"]
  71 -> 79 [style=solid label="DIV"]
  71 -> 80 [style=solid label="MOD"]
  71 -> 81 [style=solid label="MAYOR"]
  71 -> 82 [style=solid label="MENOR"]
  71 -> 83 [style=solid label="IGUAL"]
  71 -> 84 [style=solid label="AND"]
  71 -> 85 [style=solid label="OR"]
  71 -> 94 [style=solid label="','"]
  71 -> 95 [style=solid label="')'"]
  71 -> 96 [style=dashed label="AuxExpr"]
  71 -> 87 [style=dashed label="bin_op"]
  71 -> 88 [style=dashed label="arith_op"]
  71 -> 89 [style=dashed label="rel_op"]
  71 -> 90 [style=dashed label="cond_op"]
  72 [label="State 72\n\l 23 statament: IF '(' expr . ')' block ELSE block\l 24          | IF '(' expr . ')' block\l 38 expr: expr . bin_op expr\l"]
  72 -> 76 [style=solid label="MAS"]
  72 -> 77 [style=solid label="MENOS"]
  72 -> 78 [style=solid label="MULT"]
  72 -> 79 [style=solid label="DIV"]
  72 -> 80 [style=solid label="MOD"]
  72 -> 81 [style=solid label="MAYOR"]
  72 -> 82 [style=solid label="MENOR"]
  72 -> 83 [style=solid label="IGUAL"]
  72 -> 84 [style=solid label="AND"]
  72 -> 85 [style=solid label="OR"]
  72 -> 97 [style=solid label="')'"]
  72 -> 87 [style=dashed label="bin_op"]
  72 -> 88 [style=dashed label="arith_op"]
  72 -> 89 [style=dashed label="rel_op"]
  72 -> 90 [style=dashed label="cond_op"]
  73 [label="State 73\n\l 38 expr: expr . bin_op expr\l 39     | MENOS expr .\l"]
  73 -> 76 [style=solid label="MAS"]
  73 -> 77 [style=solid label="MENOS"]
  73 -> 78 [style=solid label="MULT"]
  73 -> 79 [style=solid label="DIV"]
  73 -> 80 [style=solid label="MOD"]
  73 -> 81 [style=solid label="MAYOR"]
  73 -> 82 [style=solid label="MENOR"]
  73 -> 83 [style=solid label="IGUAL"]
  73 -> 84 [style=solid label="AND"]
  73 -> 85 [style=solid label="OR"]
  73 -> 87 [style=dashed label="bin_op"]
  73 -> 88 [style=dashed label="arith_op"]
  73 -> 89 [style=dashed label="rel_op"]
  73 -> 90 [style=dashed label="cond_op"]
  73 -> "73R39d" [label="[MAS, MENOS, MULT, DIV, MOD, MAYOR, MENOR, IGUAL, AND, OR]", style=solid]
 "73R39d" [label="R39", fillcolor=5, shape=diamond, style=filled]
  73 -> "73R39" [style=solid]
 "73R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 38 expr: expr . bin_op expr\l 41     | '(' expr . ')'\l"]
  74 -> 76 [style=solid label="MAS"]
  74 -> 77 [style=solid label="MENOS"]
  74 -> 78 [style=solid label="MULT"]
  74 -> 79 [style=solid label="DIV"]
  74 -> 80 [style=solid label="MOD"]
  74 -> 81 [style=solid label="MAYOR"]
  74 -> 82 [style=solid label="MENOR"]
  74 -> 83 [style=solid label="IGUAL"]
  74 -> 84 [style=solid label="AND"]
  74 -> 85 [style=solid label="OR"]
  74 -> 98 [style=solid label="')'"]
  74 -> 87 [style=dashed label="bin_op"]
  74 -> 88 [style=dashed label="arith_op"]
  74 -> 89 [style=dashed label="rel_op"]
  74 -> 90 [style=dashed label="cond_op"]
  75 [label="State 75\n\l 38 expr: expr . bin_op expr\l 40     | '!' expr .\l"]
  75 -> 76 [style=solid label="MAS"]
  75 -> 77 [style=solid label="MENOS"]
  75 -> 78 [style=solid label="MULT"]
  75 -> 79 [style=solid label="DIV"]
  75 -> 80 [style=solid label="MOD"]
  75 -> 81 [style=solid label="MAYOR"]
  75 -> 82 [style=solid label="MENOR"]
  75 -> 83 [style=solid label="IGUAL"]
  75 -> 84 [style=solid label="AND"]
  75 -> 85 [style=solid label="OR"]
  75 -> 87 [style=dashed label="bin_op"]
  75 -> 88 [style=dashed label="arith_op"]
  75 -> 89 [style=dashed label="rel_op"]
  75 -> 90 [style=dashed label="cond_op"]
  75 -> "75R40d" [label="[MAS, MENOS, MULT, DIV, MOD, MAYOR, MENOR, IGUAL, AND, OR]", style=solid]
 "75R40d" [label="R40", fillcolor=5, shape=diamond, style=filled]
  75 -> "75R40" [style=solid]
 "75R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l 45 arith_op: MAS .\l"]
  76 -> "76R45" [style=solid]
 "76R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 46 arith_op: MENOS .\l"]
  77 -> "77R46" [style=solid]
 "77R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 47 arith_op: MULT .\l"]
  78 -> "78R47" [style=solid]
 "78R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l 48 arith_op: DIV .\l"]
  79 -> "79R48" [style=solid]
 "79R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 49 arith_op: MOD .\l"]
  80 -> "80R49" [style=solid]
 "80R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l 51 rel_op: MAYOR .\l"]
  81 -> "81R51" [style=solid]
 "81R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l 50 rel_op: MENOR .\l"]
  82 -> "82R50" [style=solid]
 "82R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l 52 rel_op: IGUAL .\l"]
  83 -> "83R52" [style=solid]
 "83R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l 53 cond_op: AND .\l"]
  84 -> "84R53" [style=solid]
 "84R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l 54 cond_op: OR .\l"]
  85 -> "85R54" [style=solid]
 "85R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l 26 statament: RETURN expr ';' .\l"]
  86 -> "86R26" [style=solid]
 "86R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l 38 expr: expr bin_op . expr\l"]
  87 -> 51 [style=solid label="ID"]
  87 -> 52 [style=solid label="INT_LITERAL"]
  87 -> 53 [style=solid label="FALSE"]
  87 -> 54 [style=solid label="TRUE"]
  87 -> 55 [style=solid label="MENOS"]
  87 -> 56 [style=solid label="'('"]
  87 -> 57 [style=solid label="'!'"]
  87 -> 58 [style=dashed label="method_call"]
  87 -> 99 [style=dashed label="expr"]
  87 -> 60 [style=dashed label="literal"]
  87 -> 61 [style=dashed label="bool_literal"]
  88 [label="State 88\n\l 42 bin_op: arith_op .\l"]
  88 -> "88R42" [style=solid]
 "88R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l 43 bin_op: rel_op .\l"]
  89 -> "89R43" [style=solid]
 "89R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  90 [label="State 90\n\l 44 bin_op: cond_op .\l"]
  90 -> "90R44" [style=solid]
 "90R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  91 [label="State 91\n\l 25 statament: WHILE expr block .\l"]
  91 -> "91R25" [style=solid]
 "91R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l 15 block: '{' var_decl statament '}' .\l"]
  92 -> "92R15" [style=solid]
 "92R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 21 statament: ID ASIGN expr ';' .\l"]
  93 -> "93R21" [style=solid]
 "93R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  94 [label="State 94\n\l 33 AuxExpr: ',' . expr\l 34        | ',' . expr AuxExpr\l"]
  94 -> 51 [style=solid label="ID"]
  94 -> 52 [style=solid label="INT_LITERAL"]
  94 -> 53 [style=solid label="FALSE"]
  94 -> 54 [style=solid label="TRUE"]
  94 -> 55 [style=solid label="MENOS"]
  94 -> 56 [style=solid label="'('"]
  94 -> 57 [style=solid label="'!'"]
  94 -> 58 [style=dashed label="method_call"]
  94 -> 100 [style=dashed label="expr"]
  94 -> 60 [style=dashed label="literal"]
  94 -> 61 [style=dashed label="bool_literal"]
  95 [label="State 95\n\l 31 method_call: ID '(' expr ')' .\l"]
  95 -> "95R31" [style=solid]
 "95R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l 32 method_call: ID '(' expr AuxExpr . ')'\l"]
  96 -> 101 [style=solid label="')'"]
  97 [label="State 97\n\l 23 statament: IF '(' expr ')' . block ELSE block\l 24          | IF '(' expr ')' . block\l"]
  97 -> 25 [style=solid label="'{'"]
  97 -> 102 [style=dashed label="block"]
  98 [label="State 98\n\l 41 expr: '(' expr ')' .\l"]
  98 -> "98R41" [style=solid]
 "98R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l 38 expr: expr . bin_op expr\l 38     | expr bin_op expr .\l"]
  99 -> 76 [style=solid label="MAS"]
  99 -> 77 [style=solid label="MENOS"]
  99 -> 78 [style=solid label="MULT"]
  99 -> 79 [style=solid label="DIV"]
  99 -> 80 [style=solid label="MOD"]
  99 -> 81 [style=solid label="MAYOR"]
  99 -> 82 [style=solid label="MENOR"]
  99 -> 83 [style=solid label="IGUAL"]
  99 -> 84 [style=solid label="AND"]
  99 -> 85 [style=solid label="OR"]
  99 -> 87 [style=dashed label="bin_op"]
  99 -> 88 [style=dashed label="arith_op"]
  99 -> 89 [style=dashed label="rel_op"]
  99 -> 90 [style=dashed label="cond_op"]
  99 -> "99R38d" [label="[MAS, MENOS, MULT, DIV, MOD, MAYOR, MENOR, IGUAL, AND, OR]", style=solid]
 "99R38d" [label="R38", fillcolor=5, shape=diamond, style=filled]
  99 -> "99R38" [style=solid]
 "99R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 33 AuxExpr: ',' expr .\l 34        | ',' expr . AuxExpr\l 38 expr: expr . bin_op expr\l"]
  100 -> 76 [style=solid label="MAS"]
  100 -> 77 [style=solid label="MENOS"]
  100 -> 78 [style=solid label="MULT"]
  100 -> 79 [style=solid label="DIV"]
  100 -> 80 [style=solid label="MOD"]
  100 -> 81 [style=solid label="MAYOR"]
  100 -> 82 [style=solid label="MENOR"]
  100 -> 83 [style=solid label="IGUAL"]
  100 -> 84 [style=solid label="AND"]
  100 -> 85 [style=solid label="OR"]
  100 -> 94 [style=solid label="','"]
  100 -> 103 [style=dashed label="AuxExpr"]
  100 -> 87 [style=dashed label="bin_op"]
  100 -> 88 [style=dashed label="arith_op"]
  100 -> 89 [style=dashed label="rel_op"]
  100 -> 90 [style=dashed label="cond_op"]
  100 -> "100R33" [style=solid]
 "100R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l 32 method_call: ID '(' expr AuxExpr ')' .\l"]
  101 -> "101R32" [style=solid]
 "101R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 23 statament: IF '(' expr ')' block . ELSE block\l 24          | IF '(' expr ')' block .\l"]
  102 -> 104 [style=solid label="ELSE"]
  102 -> "102R24" [style=solid]
 "102R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  103 [label="State 103\n\l 34 AuxExpr: ',' expr AuxExpr .\l"]
  103 -> "103R34" [style=solid]
 "103R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  104 [label="State 104\n\l 23 statament: IF '(' expr ')' block ELSE . block\l"]
  104 -> 25 [style=solid label="'{'"]
  104 -> 105 [style=dashed label="block"]
  105 [label="State 105\n\l 23 statament: IF '(' expr ')' block ELSE block .\l"]
  105 -> "105R23" [style=solid]
 "105R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
}
